var _a;
import { ChartType } from '../models/chart-type.model';
var ChartTypesToPackages = (_a = {},
    _a[ChartType.AnnotationChart] = 'annotationchart',
    _a[ChartType.AreaChart] = 'corechart',
    _a[ChartType.Bar] = 'bar',
    _a[ChartType.BarChart] = 'corechart',
    _a[ChartType.BubbleChart] = 'corechart',
    _a[ChartType.Calendar] = 'calendar',
    _a[ChartType.CandlestickChart] = 'corechart',
    _a[ChartType.ColumnChart] = 'corechart',
    _a[ChartType.ComboChart] = 'corechart',
    _a[ChartType.PieChart] = 'corechart',
    _a[ChartType.Gantt] = 'gantt',
    _a[ChartType.Gauge] = 'gauge',
    _a[ChartType.GeoChart] = 'geochart',
    _a[ChartType.Histogram] = 'corechart',
    _a[ChartType.Line] = 'line',
    _a[ChartType.LineChart] = 'corechart',
    _a[ChartType.Map] = 'map',
    _a[ChartType.OrgChart] = 'orgchart',
    _a[ChartType.Sankey] = 'sankey',
    _a[ChartType.Scatter] = 'scatter',
    _a[ChartType.ScatterChart] = 'corechart',
    _a[ChartType.SteppedAreaChart] = 'corechart',
    _a[ChartType.Table] = 'table',
    _a[ChartType.Timeline] = 'timeline',
    _a[ChartType.TreeMap] = 'treemap',
    _a[ChartType.WordTree] = 'wordtree',
    _a);
export function getPackageForChart(type) {
    return ChartTypesToPackages[type];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuaGVscGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1nb29nbGUtY2hhcnRzLyIsInNvdXJjZXMiOlsibGliL2hlbHBlcnMvY2hhcnQuaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFdkQsSUFBTSxvQkFBb0I7SUFDeEIsR0FBQyxTQUFTLENBQUMsZUFBZSxJQUFHLGlCQUFpQjtJQUM5QyxHQUFDLFNBQVMsQ0FBQyxTQUFTLElBQUcsV0FBVztJQUNsQyxHQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUcsS0FBSztJQUN0QixHQUFDLFNBQVMsQ0FBQyxRQUFRLElBQUcsV0FBVztJQUNqQyxHQUFDLFNBQVMsQ0FBQyxXQUFXLElBQUcsV0FBVztJQUNwQyxHQUFDLFNBQVMsQ0FBQyxRQUFRLElBQUcsVUFBVTtJQUNoQyxHQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsSUFBRyxXQUFXO0lBQ3pDLEdBQUMsU0FBUyxDQUFDLFdBQVcsSUFBRyxXQUFXO0lBQ3BDLEdBQUMsU0FBUyxDQUFDLFVBQVUsSUFBRyxXQUFXO0lBQ25DLEdBQUMsU0FBUyxDQUFDLFFBQVEsSUFBRyxXQUFXO0lBQ2pDLEdBQUMsU0FBUyxDQUFDLEtBQUssSUFBRyxPQUFPO0lBQzFCLEdBQUMsU0FBUyxDQUFDLEtBQUssSUFBRyxPQUFPO0lBQzFCLEdBQUMsU0FBUyxDQUFDLFFBQVEsSUFBRyxVQUFVO0lBQ2hDLEdBQUMsU0FBUyxDQUFDLFNBQVMsSUFBRyxXQUFXO0lBQ2xDLEdBQUMsU0FBUyxDQUFDLElBQUksSUFBRyxNQUFNO0lBQ3hCLEdBQUMsU0FBUyxDQUFDLFNBQVMsSUFBRyxXQUFXO0lBQ2xDLEdBQUMsU0FBUyxDQUFDLEdBQUcsSUFBRyxLQUFLO0lBQ3RCLEdBQUMsU0FBUyxDQUFDLFFBQVEsSUFBRyxVQUFVO0lBQ2hDLEdBQUMsU0FBUyxDQUFDLE1BQU0sSUFBRyxRQUFRO0lBQzVCLEdBQUMsU0FBUyxDQUFDLE9BQU8sSUFBRyxTQUFTO0lBQzlCLEdBQUMsU0FBUyxDQUFDLFlBQVksSUFBRyxXQUFXO0lBQ3JDLEdBQUMsU0FBUyxDQUFDLGdCQUFnQixJQUFHLFdBQVc7SUFDekMsR0FBQyxTQUFTLENBQUMsS0FBSyxJQUFHLE9BQU87SUFDMUIsR0FBQyxTQUFTLENBQUMsUUFBUSxJQUFHLFVBQVU7SUFDaEMsR0FBQyxTQUFTLENBQUMsT0FBTyxJQUFHLFNBQVM7SUFDOUIsR0FBQyxTQUFTLENBQUMsUUFBUSxJQUFHLFVBQVU7T0FDakMsQ0FBQztBQUVGLE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxJQUFlO0lBQ2hELE9BQU8sb0JBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXJ0VHlwZSB9IGZyb20gJy4uL21vZGVscy9jaGFydC10eXBlLm1vZGVsJztcblxuY29uc3QgQ2hhcnRUeXBlc1RvUGFja2FnZXMgPSB7XG4gIFtDaGFydFR5cGUuQW5ub3RhdGlvbkNoYXJ0XTogJ2Fubm90YXRpb25jaGFydCcsXG4gIFtDaGFydFR5cGUuQXJlYUNoYXJ0XTogJ2NvcmVjaGFydCcsXG4gIFtDaGFydFR5cGUuQmFyXTogJ2JhcicsXG4gIFtDaGFydFR5cGUuQmFyQ2hhcnRdOiAnY29yZWNoYXJ0JyxcbiAgW0NoYXJ0VHlwZS5CdWJibGVDaGFydF06ICdjb3JlY2hhcnQnLFxuICBbQ2hhcnRUeXBlLkNhbGVuZGFyXTogJ2NhbGVuZGFyJyxcbiAgW0NoYXJ0VHlwZS5DYW5kbGVzdGlja0NoYXJ0XTogJ2NvcmVjaGFydCcsXG4gIFtDaGFydFR5cGUuQ29sdW1uQ2hhcnRdOiAnY29yZWNoYXJ0JyxcbiAgW0NoYXJ0VHlwZS5Db21ib0NoYXJ0XTogJ2NvcmVjaGFydCcsXG4gIFtDaGFydFR5cGUuUGllQ2hhcnRdOiAnY29yZWNoYXJ0JyxcbiAgW0NoYXJ0VHlwZS5HYW50dF06ICdnYW50dCcsXG4gIFtDaGFydFR5cGUuR2F1Z2VdOiAnZ2F1Z2UnLFxuICBbQ2hhcnRUeXBlLkdlb0NoYXJ0XTogJ2dlb2NoYXJ0JyxcbiAgW0NoYXJ0VHlwZS5IaXN0b2dyYW1dOiAnY29yZWNoYXJ0JyxcbiAgW0NoYXJ0VHlwZS5MaW5lXTogJ2xpbmUnLFxuICBbQ2hhcnRUeXBlLkxpbmVDaGFydF06ICdjb3JlY2hhcnQnLFxuICBbQ2hhcnRUeXBlLk1hcF06ICdtYXAnLFxuICBbQ2hhcnRUeXBlLk9yZ0NoYXJ0XTogJ29yZ2NoYXJ0JyxcbiAgW0NoYXJ0VHlwZS5TYW5rZXldOiAnc2Fua2V5JyxcbiAgW0NoYXJ0VHlwZS5TY2F0dGVyXTogJ3NjYXR0ZXInLFxuICBbQ2hhcnRUeXBlLlNjYXR0ZXJDaGFydF06ICdjb3JlY2hhcnQnLFxuICBbQ2hhcnRUeXBlLlN0ZXBwZWRBcmVhQ2hhcnRdOiAnY29yZWNoYXJ0JyxcbiAgW0NoYXJ0VHlwZS5UYWJsZV06ICd0YWJsZScsXG4gIFtDaGFydFR5cGUuVGltZWxpbmVdOiAndGltZWxpbmUnLFxuICBbQ2hhcnRUeXBlLlRyZWVNYXBdOiAndHJlZW1hcCcsXG4gIFtDaGFydFR5cGUuV29yZFRyZWVdOiAnd29yZHRyZWUnXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFja2FnZUZvckNoYXJ0KHR5cGU6IENoYXJ0VHlwZSk6IHN0cmluZyB7XG4gIHJldHVybiBDaGFydFR5cGVzVG9QYWNrYWdlc1t0eXBlXTtcbn1cbiJdfQ==