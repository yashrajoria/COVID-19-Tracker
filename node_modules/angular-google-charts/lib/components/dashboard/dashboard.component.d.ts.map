{"version":3,"file":"dashboard.component.d.ts","sources":["dashboard.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ChartErrorEvent } from '../../models/events.model';\nimport { ScriptLoaderService } from '../../script-loader/script-loader.service';\nimport { Column, Row } from '../chart-base/chart-base.component';\nexport declare class DashboardComponent implements OnInit, OnChanges {\n    private element;\n    private loaderService;\n    /**\n     * Data used to initialize the table.\n     *\n     * This must also contain all roles that are set in the `columns` property.\n     */\n    data: Row[];\n    /**\n     * The columns the `data` consists of.\n     * The length of this array must match the length of each row in the `data` object.\n     *\n     * If {@link https://developers.google.com/chart/interactive/docs/roles roles} should be applied, they must be included in this array as well.\n     */\n    columns: Column[];\n    /**\n     * The dashboard has completed drawing and is ready to accept changes.\n     *\n     * The ready event will also fire:\n     * - after the completion of a dashboard refresh triggered by a user or programmatic interaction with one of the controls,\n     * - after redrawing any chart on the dashboard.\n     */\n    ready: EventEmitter<void>;\n    /**\n     * Emits when an error occurs when attempting to render the dashboard.\n     * One or more of the controls and charts that are part of the dashboard may have failed rendering.\n     */\n    error: EventEmitter<ChartErrorEvent>;\n    private controlWrappers;\n    private dashboard;\n    private dataTable;\n    private initialized;\n    constructor(element: ElementRef, loaderService: ScriptLoaderService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    private createDashboard;\n    private initializeBindings;\n    private createDataTable;\n    private getDataAsTable;\n}\n"]}